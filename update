#!/usr/bin/env nix-shell
#! nix-shell -p curl jq minisign -i sh
set -exo pipefail

# The well known public key for Zig
ZIG_PUBLIC_KEY="RWSGOq2NVecA2UPNdBUZykf1CCb147pkmdtYxgb3Ti+JO/wCYvhbAb/U"
ZLS_PUBLIC_KEY="RWR+9B91GBZ0zOjh6Lr17+zKf5BoSuFvrx2xSeDE57uIYvnKBGmMjOex"

rm -rf .update-data
mkdir -p .update-data

cd .update-data

# Grab the JSON and parse the version
rm -rf *index.json zig-index.json.minisig
curl -s 'https://ziglang.org/download/index.json' > zig-index.json
VERSION=$(cat zig-index.json | jq -r '.master.version')
echo "Parsing master version: ${VERSION}"

# Verify the signature of the JSON before we parse it
curl -s "https://ziglang.org/builds/zig-${VERSION}-index.json.minisig" > zig-index.json.minisig
minisign -V -P ${PUBLIC_KEY} -x zig-index.json.minisig -m zig-index.json

# Merge Mach's index.json with the official one
curl -s 'https://machengine.org/zig/index.json' > mach-index.json
jq -s '.[0] * .[1]' mach-index.json zig-index.json > zig.json

# Build our new sources.json
cat zig.json | jq -f ../source-gen.jq > zig.new.json

### ZLS ###
jq -n \
  --slurpfile stable <(curl -s 'https://builds.zigtools.org/index.json') \
  --slurpfile master <(curl -s "https://releases.zigtools.org/v1/zls/select-version?$(echo "$VERSION" | jq -R '"compatibility=only-runtime&zig_version=\(@uri)"' -r)") \
  '$stable[0] * {master: $master[0]}' > zls.json

cat zls.json | jq -f ../source-gen.jq > zls.new.json

# For debugging
# cat sources.new.json
# exit

# Copy the old file since jq can't modify in-place. This is also a backup.
cp ../zig.json zig.old.json
jq -sS '.[0] * .[1]' zig.old.json zig.new.json > ../zig.json
cp ../zls.json zls.old.json
jq -sS '.[0] * .[1]' zls.old.json zls.new.json > ../zls.json
